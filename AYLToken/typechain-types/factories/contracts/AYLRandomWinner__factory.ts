/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AYLRandomWinner,
  AYLRandomWinnerInterface,
} from "../../contracts/AYLRandomWinner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aylToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AYLRandomWinner__FailedToJoinAGame",
    type: "error",
  },
  {
    inputs: [],
    name: "AYLRandomWinner__FailedToStartGame",
    type: "error",
  },
  {
    inputs: [],
    name: "AYLRandomWinner__FailedToTransferTokensToWinner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "JoinedGame",
    type: "event",
  },
  {
    inputs: [],
    name: "_onwerOfATLToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allGames",
    outputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxNumOfPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aylToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "existingGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_entryFee",
        type: "uint256",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomNumbers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxNumOfPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_entryFee",
        type: "uint256",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052736168499c0cffcacd319c818142124b7a15e857ab600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd89b2bf150e3b9e13446986e571fb9cab24b13cea0a43ea20a6049a85cc807cc60001b600955620186a0600a60006101000a81548163ffffffff021916908363ffffffff1602179055506003600a60046101000a81548161ffff021916908361ffff1602179055506001600a60066101000a81548163ffffffff021916908363ffffffff160217905550348015620000f157600080fd5b5060405162001bb438038062001bb48339818101604052810190620001179190620002b5565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050506200037d565b600081519050620002988162000349565b92915050565b600081519050620002af8162000363565b92915050565b60008060408385031215620002cf57620002ce62000344565b5b6000620002df8582860162000287565b9250506020620002f2858286016200029e565b9150509250929050565b6000620003098262000310565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b6200035481620002fc565b81146200036057600080fd5b50565b6200036e8162000330565b81146200037a57600080fd5b50565b60805160601c611811620003a36000396000818161027501526102c901526118116000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063730b838111610071578063730b838114610165578063998f1b8014610181578063a0b55095146101b1578063b60b9fcb146101e3578063b898a977146101ff578063eaed8d4e1461022f576100a8565b80626d6cae146100ad5780630904cb57146100cb5780631fe543e3146100fb5780632edc4bd4146101175780635257cd9014610135575b600080fd5b6100b561024d565b6040516100c291906112ec565b60405180910390f35b6100e560048036038101906100e09190610f37565b610253565b6040516100f291906111e3565b60405180910390f35b61011560048036038101906101109190610f91565b610273565b005b61011f610333565b60405161012c9190611251565b60405180910390f35b61014f600480360381019061014a9190610f37565b610357565b60405161015c91906112ec565b60405180910390f35b61017f600480360381019061017a9190610fed565b61037b565b005b61019b60048036038101906101969190610fed565b61069b565b6040516101a89190611131565b60405180910390f35b6101cb60048036038101906101c69190610f37565b6106e9565b6040516101da93929190611307565b60405180910390f35b6101fd60048036038101906101f89190610fed565b610713565b005b61021960048036038101906102149190610fed565b610c87565b60405161022691906111e3565b60405180910390f35b610237610cb6565b6040516102449190611131565b60405180910390f35b600c5481565b60046020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032557337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161031c92919061114c565b60405180910390fd5b61032f8282610cdc565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b818154811061036757600080fd5b906000526020600020016000915090505481565b60036000838152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4906112cc565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008661046491906113d1565b6040518463ffffffff1660e01b815260040161048293929190611175565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610f0a565b90508061050d576040517f9b72fd5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060600160405280600654815260200184815260200183815250600560006006548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600260006006548152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160036000858152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000600654815260200190815260200160002060006101000a81548160ff0219169083151502179055507fedb371157a97763aaa1b348e6811cbb8c9eb299aaf93a6f5ba91f312bcb40fcf600654848460405161067693929190611307565b60405180910390a16006600081548092919061069190611516565b9190505550505050565b600260205281600052604060002081815481106106b757600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090508060000154908060010154908060020154905083565b6004600083815260200190815260200160002060009054906101000a900460ff16610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a906112ac565b60405180910390fd5b600560008381526020019081526020016000206002015481146107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c29061128c565b60405180910390fd5b6005600083815260200190815260200160002060010154600260008481526020019081526020016000208054905010610839576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108309061126c565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000866108b091906113d1565b6040518463ffffffff1660e01b81526004016108ce93929190611175565b602060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190610f0a565b905080610959576040517fb98486ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f53d337ea1dc431137693f9a003695ac0fde36068f5fc73370015168b9e64cf9e338484604051610a00939291906111ac565b60405180910390a1600560008481526020019081526020016000206001015460026000858152602001908152602001600020805490501415610c8257610a44610d24565b60006002600085815260200190815260200160002080549050600b8581548110610a7157610a706115ee565b5b9060005260206000200154610a86919061155f565b90506000600260008681526020019081526020016000208281548110610aaf57610aae6115ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000846005600088815260200190815260200160002060010154610b0091906113d1565b905060006064605a670de0b6b3a764000084610b1c91906113d1565b610b2691906113d1565b610b3091906113a0565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686856040518463ffffffff1660e01b8152600401610bb493929190611175565b602060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190610f0a565b905080610c3f576040517f3576c95a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f8420a32dd381606a863bf5711eb04325b7da1cb03e87d6167fab0afe1a9da80c8483600c54604051610c74939291906111ac565b60405180910390a150505050505b505050565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b81600081518110610cf257610cf16115ee565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600954600760149054906101000a900467ffffffffffffffff16600a60049054906101000a900461ffff16600a60009054906101000a900463ffffffff16600a60069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610dd39594939291906111fe565b602060405180830381600087803b158015610ded57600080fd5b505af1158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e259190610f64565b600c81905550565b6000610e40610e3b84611363565b61133e565b90508083825260208201905082856020860282011115610e6357610e62611651565b5b60005b85811015610e935781610e798882610ee0565b845260208401935060208301925050600181019050610e66565b5050509392505050565b600082601f830112610eb257610eb161164c565b5b8135610ec2848260208601610e2d565b91505092915050565b600081519050610eda816117ad565b92915050565b600081359050610eef816117c4565b92915050565b600081519050610f04816117c4565b92915050565b600060208284031215610f2057610f1f61165b565b5b6000610f2e84828501610ecb565b91505092915050565b600060208284031215610f4d57610f4c61165b565b5b6000610f5b84828501610ee0565b91505092915050565b600060208284031215610f7a57610f7961165b565b5b6000610f8884828501610ef5565b91505092915050565b60008060408385031215610fa857610fa761165b565b5b6000610fb685828601610ee0565b925050602083013567ffffffffffffffff811115610fd757610fd6611656565b5b610fe385828601610e9d565b9150509250929050565b600080604083850312156110045761100361165b565b5b600061101285828601610ee0565b925050602061102385828601610ee0565b9150509250929050565b6110368161142b565b82525050565b6110458161143d565b82525050565b61105481611449565b82525050565b611063816114af565b82525050565b600061107660138361138f565b915061108182611671565b602082019050919050565b600061109960318361138f565b91506110a48261169a565b604082019050919050565b60006110bc60288361138f565b91506110c7826116e9565b604082019050919050565b60006110df60478361138f565b91506110ea82611738565b606082019050919050565b6110fe81611453565b82525050565b61110d81611481565b82525050565b61111c8161148b565b82525050565b61112b8161149b565b82525050565b6000602082019050611146600083018461102d565b92915050565b6000604082019050611161600083018561102d565b61116e602083018461102d565b9392505050565b600060608201905061118a600083018661102d565b611197602083018561102d565b6111a46040830184611104565b949350505050565b60006060820190506111c1600083018661102d565b6111ce6020830185611104565b6111db6040830184611104565b949350505050565b60006020820190506111f8600083018461103c565b92915050565b600060a082019050611213600083018861104b565b6112206020830187611122565b61122d60408301866110f5565b61123a6060830185611113565b6112476080830184611113565b9695505050505050565b6000602082019050611266600083018461105a565b92915050565b6000602082019050818103600083015261128581611069565b9050919050565b600060208201905081810360008301526112a58161108c565b9050919050565b600060208201905081810360008301526112c5816110af565b9050919050565b600060208201905081810360008301526112e5816110d2565b9050919050565b60006020820190506113016000830184611104565b92915050565b600060608201905061131c6000830186611104565b6113296020830185611104565b6113366040830184611104565b949350505050565b6000611348611359565b905061135482826114e5565b919050565b6000604051905090565b600067ffffffffffffffff82111561137e5761137d61161d565b5b602082029050602081019050919050565b600082825260208201905092915050565b60006113ab82611481565b91506113b683611481565b9250826113c6576113c56115bf565b5b828204905092915050565b60006113dc82611481565b91506113e783611481565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114205761141f611590565b5b828202905092915050565b600061143682611461565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006114ba826114c1565b9050919050565b60006114cc826114d3565b9050919050565b60006114de82611461565b9050919050565b6114ee82611660565b810181811067ffffffffffffffff8211171561150d5761150c61161d565b5b80604052505050565b600061152182611481565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561155457611553611590565b5b600182019050919050565b600061156a82611481565b915061157583611481565b925082611585576115846115bf565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4d617820706c6179657273207265616368656400000000000000000000000000600082015250565b7f456e747279206665652073686f756c642062652074686520726571756972656460008201527f20656e7472792066656520616d6f756e74000000000000000000000000000000602082015250565b7f412067616d652077697468207468697320696420686173206e6f74206265656e60008201527f2073746172746564000000000000000000000000000000000000000000000000602082015250565b7f546865726520697320616c726561647920616e206578697374696e672067616d60008201527f652077697468207468697320656e7472792c20676f20616e64206a6f696e207460208201527f68652067616d6500000000000000000000000000000000000000000000000000604082015250565b6117b68161143d565b81146117c157600080fd5b50565b6117cd81611481565b81146117d857600080fd5b5056fea26469706673582212200e7aeba58c4507b242fcee694e29dd0fd800ed153c67d8a008669dbb7d85d48764736f6c63430008070033";

type AYLRandomWinnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AYLRandomWinnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AYLRandomWinner__factory extends ContractFactory {
  constructor(...args: AYLRandomWinnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aylToken: string,
    _subscriptionId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AYLRandomWinner> {
    return super.deploy(
      _aylToken,
      _subscriptionId,
      overrides || {}
    ) as Promise<AYLRandomWinner>;
  }
  override getDeployTransaction(
    _aylToken: string,
    _subscriptionId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aylToken,
      _subscriptionId,
      overrides || {}
    );
  }
  override attach(address: string): AYLRandomWinner {
    return super.attach(address) as AYLRandomWinner;
  }
  override connect(signer: Signer): AYLRandomWinner__factory {
    return super.connect(signer) as AYLRandomWinner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AYLRandomWinnerInterface {
    return new utils.Interface(_abi) as AYLRandomWinnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AYLRandomWinner {
    return new Contract(address, _abi, signerOrProvider) as AYLRandomWinner;
  }
}
