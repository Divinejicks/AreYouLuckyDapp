/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AYLToken, AYLTokenInterface } from "../../contracts/AYLToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AYLToken__FailedToWithdrawEth",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceInTheContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numberOfCoinsToBuy",
        type: "uint256",
      },
    ],
    name: "buyAYLCoins",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasReceivedCoinsOnSignup",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "issueAirDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfSignupUsers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveCoinsOnSignup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "updateAYLPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040526101f4600655652d79883d20006009553480156200002157600080fd5b5060405162002d6938038062002d698339818101604052810190620000479190620004cf565b806040518060400160405280600881526020017f41594c546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f41594c00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000cc92919062000408565b508060049080519060200190620000e592919062000408565b505050600081116200012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001259062000560565b60405180910390fd5b806080818152505050620001576200014b620001b760201b60201c565b620001bf60201b60201c565b62000179336a084595161401484a0000006200028560201b620010f01760201c565b3373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506200073e565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ef9062000582565b60405180910390fd5b6200030c60008383620003fe60201b60201c565b8060026000828254620003209190620005d2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620003779190620005d2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003de9190620005a4565b60405180910390a3620003fa600083836200040360201b60201c565b5050565b505050565b505050565b828054620004169062000639565b90600052602060002090601f0160209004810192826200043a576000855562000486565b82601f106200045557805160ff191683800117855562000486565b8280016001018555821562000486579182015b828111156200048557825182559160200191906001019062000468565b5b50905062000495919062000499565b5090565b5b80821115620004b45760008160009055506001016200049a565b5090565b600081519050620004c98162000724565b92915050565b600060208284031215620004e857620004e7620006cd565b5b6000620004f884828501620004b8565b91505092915050565b600062000510601583620005c1565b91506200051d82620006d2565b602082019050919050565b600062000537601f83620005c1565b91506200054482620006fb565b602082019050919050565b6200055a816200062f565b82525050565b600060208201905081810360008301526200057b8162000501565b9050919050565b600060208201905081810360008301526200059d8162000528565b9050919050565b6000602082019050620005bb60008301846200054f565b92915050565b600082825260208201905092915050565b6000620005df826200062f565b9150620005ec836200062f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200062457620006236200066f565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200065257607f821691505b602082108114156200066957620006686200069e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200072f816200062f565b81146200073b57600080fd5b50565b60805160a05160601c6125fb6200076e600039600081816109ce0152610bea015260006107fc01526125fb6000f3fe60806040526004361061014f5760003560e01c8063617e7fc1116100b6578063a035b1fe1161006f578063a035b1fe14610457578063a457c2d714610482578063a9059cbb146104bf578063dd62ed3e146104fc578063f2fde38b14610539578063fcdd5d931461056257610156565b8063617e7fc1146103665780636da81e0f1461038257806370a08231146103ad578063715018a6146103ea5780638da5cb5b1461040157806395d89b411461042c57610156565b8063313ce56711610108578063313ce5671461027a578063355274ea146102a557806339509351146102d057806339e1edc51461030d5780633ccfd60b146103385780634a6ebf3a1461034f57610156565b806306fdde0314610158578063095ea7b31461018357806318160ddd146101c05780631bfd2276146101eb57806323b872dd14610214578063275aae841461025157610156565b3661015657005b005b34801561016457600080fd5b5061016d61059f565b60405161017a9190611d31565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a591906119aa565b610631565b6040516101b79190611d16565b60405180910390f35b3480156101cc57600080fd5b506101d5610654565b6040516101e29190611f13565b60405180910390f35b3480156101f757600080fd5b50610212600480360381019061020d9190611a37565b61065e565b005b34801561022057600080fd5b5061023b60048036038101906102369190611957565b6106e4565b6040516102489190611d16565b60405180910390f35b34801561025d57600080fd5b50610278600480360381019061027391906119ea565b610713565b005b34801561028657600080fd5b5061028f6107ef565b60405161029c9190611f2e565b60405180910390f35b3480156102b157600080fd5b506102ba6107f8565b6040516102c79190611f13565b60405180910390f35b3480156102dc57600080fd5b506102f760048036038101906102f291906119aa565b610820565b6040516103049190611d16565b60405180910390f35b34801561031957600080fd5b506103226108ca565b60405161032f9190611f13565b60405180910390f35b34801561034457600080fd5b5061034d61094e565b005b34801561035b57600080fd5b50610364610a90565b005b610380600480360381019061037b9190611a37565b610be8565b005b34801561038e57600080fd5b50610397610cac565b6040516103a49190611f13565b60405180910390f35b3480156103b957600080fd5b506103d460048036038101906103cf91906118ea565b610cb2565b6040516103e19190611f13565b60405180910390f35b3480156103f657600080fd5b506103ff610cfa565b005b34801561040d57600080fd5b50610416610d82565b6040516104239190611cfb565b60405180910390f35b34801561043857600080fd5b50610441610dac565b60405161044e9190611d31565b60405180910390f35b34801561046357600080fd5b5061046c610e3e565b6040516104799190611f13565b60405180910390f35b34801561048e57600080fd5b506104a960048036038101906104a491906119aa565b610e44565b6040516104b69190611d16565b60405180910390f35b3480156104cb57600080fd5b506104e660048036038101906104e191906119aa565b610f2e565b6040516104f39190611d16565b60405180910390f35b34801561050857600080fd5b50610523600480360381019061051e9190611917565b610f51565b6040516105309190611f13565b60405180910390f35b34801561054557600080fd5b50610560600480360381019061055b91906118ea565b610fd8565b005b34801561056e57600080fd5b50610589600480360381019061058491906118ea565b6110d0565b6040516105969190611d16565b60405180910390f35b6060600380546105ae906120a8565b80601f01602080910402602001604051908101604052809291908181526020018280546105da906120a8565b80156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b5050505050905090565b60008061063c611250565b9050610649818585611258565b600191505092915050565b6000600254905090565b610666611250565b73ffffffffffffffffffffffffffffffffffffffff16610684610d82565b73ffffffffffffffffffffffffffffffffffffffff16146106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190611e53565b60405180910390fd5b8060098190555050565b6000806106ef611250565b90506106fc858285611423565b6107078585856114af565b60019150509392505050565b61071b611250565b73ffffffffffffffffffffffffffffffffffffffff16610739610d82565b73ffffffffffffffffffffffffffffffffffffffff161461078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611e53565b60405180910390fd5b60005b828290508110156107ea576107d78383838181106107b3576107b2612181565b5b90506020020160208101906107c891906118ea565b680ad78ebc5ac6200000611730565b80806107e2906120da565b915050610792565b505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008061082b611250565b90506108bf818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ba9190611f70565b611258565b600191505092915050565b60006108d4611250565b73ffffffffffffffffffffffffffffffffffffffff166108f2610d82565b73ffffffffffffffffffffffffffffffffffffffff1614610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90611e53565b60405180910390fd5b47905090565b610956611250565b73ffffffffffffffffffffffffffffffffffffffff16610974610d82565b73ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611e53565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610a1090611ce6565b60006040518083038185875af1925050503d8060008114610a4d576040519150601f19603f3d011682016040523d82523d6000602084013e610a52565b606091505b5050905080610a8d576040517fe0ec015700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60065460085410610ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acd90611e33565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a90611e13565b60405180910390fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060086000815480929190610bce906120da565b9190505550610be633680ad78ebc5ac6200000611730565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8c5760095481610c499190611fc6565b341015610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8290611d73565b60405180910390fd5b5b610ca933670de0b6b3a764000083610ca49190611fc6565b611730565b50565b60085481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d02611250565b73ffffffffffffffffffffffffffffffffffffffff16610d20610d82565b73ffffffffffffffffffffffffffffffffffffffff1614610d76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6d90611e53565b60405180910390fd5b610d80600061179a565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610dbb906120a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610de7906120a8565b8015610e345780601f10610e0957610100808354040283529160200191610e34565b820191906000526020600020905b815481529060010190602001808311610e1757829003601f168201915b5050505050905090565b60095481565b600080610e4f611250565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610f15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0c90611ed3565b60405180910390fd5b610f228286868403611258565b60019250505092915050565b600080610f39611250565b9050610f468185856114af565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fe0611250565b73ffffffffffffffffffffffffffffffffffffffff16610ffe610d82565b73ffffffffffffffffffffffffffffffffffffffff1614611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90611e53565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90611d93565b60405180910390fd5b6110cd8161179a565b50565b60076020528060005260406000206000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115790611ef3565b60405180910390fd5b61116c60008383611860565b806002600082825461117e9190611f70565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111d39190611f70565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112389190611f13565b60405180910390a361124c60008383611865565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90611eb3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132f90611db3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114169190611f13565b60405180910390a3505050565b600061142f8484610f51565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114a9578181101561149b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149290611dd3565b60405180910390fd5b6114a88484848403611258565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561151f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151690611e73565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158690611d53565b60405180910390fd5b61159a838383611860565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161790611df3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116b39190611f70565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117179190611f13565b60405180910390a361172a848484611865565b50505050565b6117386107f8565b81611741610654565b61174b9190611f70565b111561178c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178390611e93565b60405180910390fd5b61179682826110f0565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b60008135905061187981612597565b92915050565b60008083601f840112611895576118946121b5565b5b8235905067ffffffffffffffff8111156118b2576118b16121b0565b5b6020830191508360208202830111156118ce576118cd6121ba565b5b9250929050565b6000813590506118e4816125ae565b92915050565b600060208284031215611900576118ff6121c4565b5b600061190e8482850161186a565b91505092915050565b6000806040838503121561192e5761192d6121c4565b5b600061193c8582860161186a565b925050602061194d8582860161186a565b9150509250929050565b6000806000606084860312156119705761196f6121c4565b5b600061197e8682870161186a565b935050602061198f8682870161186a565b92505060406119a0868287016118d5565b9150509250925092565b600080604083850312156119c1576119c06121c4565b5b60006119cf8582860161186a565b92505060206119e0858286016118d5565b9150509250929050565b60008060208385031215611a0157611a006121c4565b5b600083013567ffffffffffffffff811115611a1f57611a1e6121bf565b5b611a2b8582860161187f565b92509250509250929050565b600060208284031215611a4d57611a4c6121c4565b5b6000611a5b848285016118d5565b91505092915050565b611a6d81612020565b82525050565b611a7c81612032565b82525050565b6000611a8d82611f49565b611a978185611f5f565b9350611aa7818560208601612075565b611ab0816121c9565b840191505092915050565b6000611ac8602383611f5f565b9150611ad3826121da565b604082019050919050565b6000611aeb601083611f5f565b9150611af682612229565b602082019050919050565b6000611b0e602683611f5f565b9150611b1982612252565b604082019050919050565b6000611b31602283611f5f565b9150611b3c826122a1565b604082019050919050565b6000611b54601d83611f5f565b9150611b5f826122f0565b602082019050919050565b6000611b77602683611f5f565b9150611b8282612319565b604082019050919050565b6000611b9a602d83611f5f565b9150611ba582612368565b604082019050919050565b6000611bbd604983611f5f565b9150611bc8826123b7565b606082019050919050565b6000611be0602083611f5f565b9150611beb8261242c565b602082019050919050565b6000611c03602583611f5f565b9150611c0e82612455565b604082019050919050565b6000611c26601983611f5f565b9150611c31826124a4565b602082019050919050565b6000611c49600083611f54565b9150611c54826124cd565b600082019050919050565b6000611c6c602483611f5f565b9150611c77826124d0565b604082019050919050565b6000611c8f602583611f5f565b9150611c9a8261251f565b604082019050919050565b6000611cb2601f83611f5f565b9150611cbd8261256e565b602082019050919050565b611cd18161205e565b82525050565b611ce081612068565b82525050565b6000611cf182611c3c565b9150819050919050565b6000602082019050611d106000830184611a64565b92915050565b6000602082019050611d2b6000830184611a73565b92915050565b60006020820190508181036000830152611d4b8184611a82565b905092915050565b60006020820190508181036000830152611d6c81611abb565b9050919050565b60006020820190508181036000830152611d8c81611ade565b9050919050565b60006020820190508181036000830152611dac81611b01565b9050919050565b60006020820190508181036000830152611dcc81611b24565b9050919050565b60006020820190508181036000830152611dec81611b47565b9050919050565b60006020820190508181036000830152611e0c81611b6a565b9050919050565b60006020820190508181036000830152611e2c81611b8d565b9050919050565b60006020820190508181036000830152611e4c81611bb0565b9050919050565b60006020820190508181036000830152611e6c81611bd3565b9050919050565b60006020820190508181036000830152611e8c81611bf6565b9050919050565b60006020820190508181036000830152611eac81611c19565b9050919050565b60006020820190508181036000830152611ecc81611c5f565b9050919050565b60006020820190508181036000830152611eec81611c82565b9050919050565b60006020820190508181036000830152611f0c81611ca5565b9050919050565b6000602082019050611f286000830184611cc8565b92915050565b6000602082019050611f436000830184611cd7565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611f7b8261205e565b9150611f868361205e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fbb57611fba612123565b5b828201905092915050565b6000611fd18261205e565b9150611fdc8361205e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561201557612014612123565b5b828202905092915050565b600061202b8261203e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612093578082015181840152602081019050612078565b838111156120a2576000848401525b50505050565b600060028204905060018216806120c057607f821691505b602082108114156120d4576120d3612152565b5b50919050565b60006120e58261205e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561211857612117612123565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f596f75206861766520616c72656164792072656365697665642041594c20636f60008201527f696e73206f6e207369676e757000000000000000000000000000000000000000602082015250565b7f4d6178206e756d62657220686173206265656e2072656163682c20796f75206360008201527f616e206e6f206c6f6e67657220726563656976652041594c20636f696e73206f60208201527f6e207369676e2075700000000000000000000000000000000000000000000000604082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b50565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6125a081612020565b81146125ab57600080fd5b50565b6125b78161205e565b81146125c257600080fd5b5056fea2646970667358221220c1ebc6f169e22be5e4d7efc02687caa34a8b6f2adc6aa3ed133fdf9d2d7c0b4f64736f6c63430008070033";

type AYLTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AYLTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AYLToken__factory extends ContractFactory {
  constructor(...args: AYLTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    cap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AYLToken> {
    return super.deploy(cap, overrides || {}) as Promise<AYLToken>;
  }
  override getDeployTransaction(
    cap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cap, overrides || {});
  }
  override attach(address: string): AYLToken {
    return super.attach(address) as AYLToken;
  }
  override connect(signer: Signer): AYLToken__factory {
    return super.connect(signer) as AYLToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AYLTokenInterface {
    return new utils.Interface(_abi) as AYLTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AYLToken {
    return new Contract(address, _abi, signerOrProvider) as AYLToken;
  }
}
