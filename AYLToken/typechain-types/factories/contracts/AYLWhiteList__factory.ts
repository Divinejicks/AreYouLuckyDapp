/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AYLWhiteList,
  AYLWhiteListInterface,
} from "../../contracts/AYLWhiteList";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606460015534801561001557600080fd5b5061017c806100256000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c30796ab14610030575b600080fd5b61004a60048036038101906100459190610095565b610060565b60405161005791906100d1565b60405180910390f35b60036020528060005260406000206000915054906101000a900460ff1681565b60008135905061008f8161012f565b92915050565b6000602082840312156100ab576100aa61012a565b5b60006100b984828501610080565b91505092915050565b6100cb816100fe565b82525050565b60006020820190506100e660008301846100c2565b92915050565b60006100f78261010a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610138816100ec565b811461014357600080fd5b5056fea2646970667358221220d87731d25735f77be7bb04ab008456d2a5bf16372e9a5195d710882629d2739e64736f6c63430008070033";

type AYLWhiteListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AYLWhiteListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AYLWhiteList__factory extends ContractFactory {
  constructor(...args: AYLWhiteListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AYLWhiteList> {
    return super.deploy(overrides || {}) as Promise<AYLWhiteList>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AYLWhiteList {
    return super.attach(address) as AYLWhiteList;
  }
  override connect(signer: Signer): AYLWhiteList__factory {
    return super.connect(signer) as AYLWhiteList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AYLWhiteListInterface {
    return new utils.Interface(_abi) as AYLWhiteListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AYLWhiteList {
    return new Contract(address, _abi, signerOrProvider) as AYLWhiteList;
  }
}
