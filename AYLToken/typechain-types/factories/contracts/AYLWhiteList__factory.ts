/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AYLWhiteList,
  AYLWhiteListInterface,
} from "../../contracts/AYLWhiteList";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addToWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistedAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfWhitelistedAddresses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606460015534801561001557600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610803806100666000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806355aee5ef146100515780636d0280271461006f578063c059cc731461008d578063c30796ab14610097575b600080fd5b6100596100c7565b604051610066919061059f565b60405180910390f35b6100776100cd565b6040516100849190610502565b60405180910390f35b6100956101eb565b005b6100b160048036038101906100ac91906103c9565b610394565b6040516100be9190610524565b60405180910390f35b60025481565b6060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101569061055f565b60405180910390fd5b60008054806020026020016040519081016040528092919081815260200182805480156101e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610197575b5050505050905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f9061053f565b60405180910390fd5b60015460025411156102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b69061057f565b60405180910390fd5b600260008154809291906102d29061064c565b91905055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915054906101000a900460ff1681565b6000813590506103c3816107b6565b92915050565b6000602082840312156103df576103de6106c4565b5b60006103ed848285016103b4565b91505092915050565b6000610402838361040e565b60208301905092915050565b61041781610604565b82525050565b6000610428826105ca565b61043281856105e2565b935061043d836105ba565b8060005b8381101561046e57815161045588826103f6565b9750610460836105d5565b925050600181019050610441565b5085935050505092915050565b61048481610616565b82525050565b60006104976029836105f3565b91506104a2826106c9565b604082019050919050565b60006104ba6021836105f3565b91506104c582610718565b604082019050919050565b60006104dd602f836105f3565b91506104e882610767565b604082019050919050565b6104fc81610642565b82525050565b6000602082019050818103600083015261051c818461041d565b905092915050565b6000602082019050610539600083018461047b565b92915050565b600060208201905081810360008301526105588161048a565b9050919050565b60006020820190508181036000830152610578816104ad565b9050919050565b60006020820190508181036000830152610598816104d0565b9050919050565b60006020820190506105b460008301846104f3565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061060f82610622565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061065782610642565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561068a57610689610695565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f5468697320616464726573732068617320616c7265616479206265656e20776860008201527f6974656c69737465640000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e20646f207468697320616374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d6178696d756d206e756d626572206f662077686974656c697374656420616460008201527f6472657373657320726561636865640000000000000000000000000000000000602082015250565b6107bf81610604565b81146107ca57600080fd5b5056fea264697066735822122073416022010c9b948d1820443af585b1fdad2a5fa2d3862ef9224799bd9542c664736f6c63430008070033";

type AYLWhiteListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AYLWhiteListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AYLWhiteList__factory extends ContractFactory {
  constructor(...args: AYLWhiteListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AYLWhiteList> {
    return super.deploy(overrides || {}) as Promise<AYLWhiteList>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AYLWhiteList {
    return super.attach(address) as AYLWhiteList;
  }
  override connect(signer: Signer): AYLWhiteList__factory {
    return super.connect(signer) as AYLWhiteList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AYLWhiteListInterface {
    return new utils.Interface(_abi) as AYLWhiteListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AYLWhiteList {
    return new Contract(address, _abi, signerOrProvider) as AYLWhiteList;
  }
}
